{"version":3,"file":"src_app_home_local-notification_local-notification_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEW;AAElE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2EAAqB;KACjC;CACF,CAAC;IAMW,kCAAkC,SAAlC,kCAAkC;;AAAlC,kCAAkC;IAJ9C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,kCAAkC;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBN;AACM;AACF;AAEA;AAE4C;AAEvB;IAWrD,2BAA2B,SAA3B,2BAA2B;;AAA3B,2BAA2B;IATvC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,kGAAkC;SACnC;QACD,YAAY,EAAE,CAAC,2EAAqB,CAAC;KACtC,CAAC;GACW,2BAA2B;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACnBU;AACkB;IAOvD,qBAAqB,SAArB,qBAAqB;IAChC,gBAAe,CAAC;IAEV,QAAQ;;YACZ,MAAM,iGAAqC,EAAE,CAAC;QAChD,CAAC;KAAA;IAEK,QAAQ;;YACZ,MAAM,MAAM,GAAG,MAAM,uFAA2B,CAAC;gBAC/C,aAAa,EAAE;oBACb;wBACE,KAAK,EAAE,oBAAoB;wBAC3B,IAAI,EAAE,6BAA6B;wBACnC,EAAE,EAAE,CAAC;wBACL,QAAQ,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE;wBACjD,KAAK,EAAE,WAAW;wBAClB,WAAW,EAAE,IAAI;wBACjB,SAAS,EAAE,aAAa;wBACxB,YAAY,EAAE,EAAE;wBAChB,KAAK,EAAE;4BACL,IAAI,EAAE,iBAAiB;yBACxB;qBACF;iBACF;aACF,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,MAAM,CAAC,CAAC;QAClD,CAAC;KAAA;;;AA1BU,qBAAqB;IALjC,wDAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,+EAA6C;;KAE9C,CAAC;GACW,qBAAqB;AAAA;;;;;;;;;;;;;;;ACRlC;;AACA;AACA;AACA;AACO,IAAIA,OAAJ;;AACP,CAAC,UAAUA,OAAV,EAAmB;EAChBA,OAAO,CAACA,OAAO,CAAC,QAAD,CAAP,GAAoB,CAArB,CAAP,GAAiC,QAAjC;EACAA,OAAO,CAACA,OAAO,CAAC,QAAD,CAAP,GAAoB,CAArB,CAAP,GAAiC,QAAjC;EACAA,OAAO,CAACA,OAAO,CAAC,SAAD,CAAP,GAAqB,CAAtB,CAAP,GAAkC,SAAlC;EACAA,OAAO,CAACA,OAAO,CAAC,WAAD,CAAP,GAAuB,CAAxB,CAAP,GAAoC,WAApC;EACAA,OAAO,CAACA,OAAO,CAAC,UAAD,CAAP,GAAsB,CAAvB,CAAP,GAAmC,UAAnC;EACAA,OAAO,CAACA,OAAO,CAAC,QAAD,CAAP,GAAoB,CAArB,CAAP,GAAiC,QAAjC;EACAA,OAAO,CAACA,OAAO,CAAC,UAAD,CAAP,GAAsB,CAAvB,CAAP,GAAmC,UAAnC;AACH,CARD,EAQGA,OAAO,KAAKA,OAAO,GAAG,EAAf,CARV;;;;;;;;;;;;;;;;;ACLA;AACA,MAAME,kBAAkB,GAAGD,+DAAc,CAAC,oBAAD,EAAuB;EAC5DE,GAAG,EAAE,MAAM,2KAAgBC,IAAhB,CAAqBC,CAAC,IAAI,IAAIA,CAAC,CAACC,qBAAN,EAA1B;AADiD,CAAvB,CAAzC;AAGA","sources":["./src/app/home/local-notification/local-notification-routing.module.ts","./src/app/home/local-notification/local-notification.module.ts","./src/app/home/local-notification/local-notification.page.ts","./node_modules/@capacitor/local-notifications/dist/esm/definitions.js","./node_modules/@capacitor/local-notifications/dist/esm/index.js"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LocalNotificationPage } from './local-notification.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LocalNotificationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LocalNotificationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LocalNotificationPageRoutingModule } from './local-notification-routing.module';\n\nimport { LocalNotificationPage } from './local-notification.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LocalNotificationPageRoutingModule\n  ],\n  declarations: [LocalNotificationPage]\n})\nexport class LocalNotificationPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { LocalNotifications } from '@capacitor/local-notifications';\n\n@Component({\n  selector: 'app-local-notification',\n  templateUrl: './local-notification.page.html',\n  styleUrls: ['./local-notification.page.scss'],\n})\nexport class LocalNotificationPage implements OnInit {\n  constructor() {}\n\n  async ngOnInit() {\n    await LocalNotifications.requestPermissions();\n  }\n\n  async schedule() {\n    const notifs = await LocalNotifications.schedule({\n      notifications: [\n        {\n          title: 'Native Plugins App',\n          body: 'Checking Local Notification',\n          id: 1,\n          schedule: { at: new Date(Date.now() + 1000 * 1) },\n          sound: 'sound.wav',\n          attachments: null,\n          smallIcon: 'ic_stat_adb',\n          actionTypeId: '',\n          extra: {\n            data: 'Checking extras',\n          },\n        },\n      ],\n    });\n    console.log('schedule notifications: ', notifs);\n  }\n}\n","/// <reference types=\"@capacitor/cli\" />\n/**\n * Day of the week. Used for scheduling notifications on a particular weekday.\n */\nexport var Weekday;\n(function (Weekday) {\n    Weekday[Weekday[\"Sunday\"] = 1] = \"Sunday\";\n    Weekday[Weekday[\"Monday\"] = 2] = \"Monday\";\n    Weekday[Weekday[\"Tuesday\"] = 3] = \"Tuesday\";\n    Weekday[Weekday[\"Wednesday\"] = 4] = \"Wednesday\";\n    Weekday[Weekday[\"Thursday\"] = 5] = \"Thursday\";\n    Weekday[Weekday[\"Friday\"] = 6] = \"Friday\";\n    Weekday[Weekday[\"Saturday\"] = 7] = \"Saturday\";\n})(Weekday || (Weekday = {}));\n","import { registerPlugin } from '@capacitor/core';\nconst LocalNotifications = registerPlugin('LocalNotifications', {\n    web: () => import('./web').then(m => new m.LocalNotificationsWeb()),\n});\nexport * from './definitions';\nexport { LocalNotifications };\n"],"names":["Weekday","registerPlugin","LocalNotifications","web","then","m","LocalNotificationsWeb"],"sourceRoot":"webpack:///","x_google_ignoreList":[3,4]}