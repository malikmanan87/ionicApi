{"version":3,"file":"src_app_home_network_network_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEV;AAE7C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sDAAW;KACvB;CACF,CAAC;IAMW,wBAAwB,SAAxB,wBAAwB;;AAAxB,wBAAwB;IAJpC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,wBAAwB;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBI;AACM;AACF;AAEA;AAEuB;AAEvB;IAWhC,iBAAiB,SAAjB,iBAAiB;;AAAjB,iBAAiB;IAT7B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,6EAAwB;SACzB;QACD,YAAY,EAAE,CAAC,sDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACnBuC;AAEN;AACtB;IAO5B,WAAW,SAAX,WAAW;IAKtB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEhC,QAAQ;;YACZ,IAAI,CAAC,cAAc,GAAG,MAAM,mEAAmB,CAC7C,qBAAqB,EACrB,CAAC,MAAM,EAAE,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;gBAC9C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;oBACnB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC5B,CAAC,CAAC,CAAC;YACL,CAAC,CACF,CAAC;YAEF,MAAM,MAAM,GAAG,MAAM,iEAAiB,EAAE,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9C,CAAC;KAAA;IAEK,YAAY,CAAC,MAAM;;YACvB,wBAAwB;YACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;YACtD,MAAM,wDAAU,CAAC;gBACf,IAAI,EAAE,IAAI,CAAC,MAAM;aAClB,CAAC,CAAC;QACL,CAAC;KAAA;IAED,WAAW;QACT,IAAI,IAAI,CAAC,cAAc;YAAE,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;IACxD,CAAC;;;;;AAjCU,WAAW;IALvB,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,oEAAkC;;KAEnC,CAAC;GACW,WAAW;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEVxB;AACA,MAAMC,OAAO,GAAGD,+DAAc,CAAC,SAAD,EAAY;EACtCE,GAAG,EAAE,MAAM,+JAAgBC,IAAhB,CAAqBC,CAAC,IAAI,IAAIA,CAAC,CAACC,UAAN,EAA1B;AAD2B,CAAZ,CAA9B;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEJA;AACA,MAAMC,KAAK,GAAGN,+DAAc,CAAC,OAAD,EAAU;EAClCE,GAAG,EAAE,MAAM,6JAAgBC,IAAhB,CAAqBC,CAAC,IAAI,IAAIA,CAAC,CAACG,QAAN,EAA1B;AADuB,CAAV,CAA5B;AAGA","sources":["./src/app/home/network/network-routing.module.ts","./src/app/home/network/network.module.ts","./src/app/home/network/network.page.ts","./node_modules/@capacitor/network/dist/esm/definitions.js","./node_modules/@capacitor/network/dist/esm/index.js","./node_modules/@capacitor/toast/dist/esm/definitions.js","./node_modules/@capacitor/toast/dist/esm/index.js"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NetworkPage } from './network.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NetworkPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NetworkPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NetworkPageRoutingModule } from './network-routing.module';\r\n\r\nimport { NetworkPage } from './network.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    NetworkPageRoutingModule\r\n  ],\r\n  declarations: [NetworkPage]\r\n})\r\nexport class NetworkPageModule {}\r\n","import { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { PluginListenerHandle } from '@capacitor/core';\r\nimport { ConnectionStatus, Network } from '@capacitor/network';\r\nimport { Toast } from '@capacitor/toast';\r\n\r\n@Component({\r\n  selector: 'app-network',\r\n  templateUrl: './network.page.html',\r\n  styleUrls: ['./network.page.scss'],\r\n})\r\nexport class NetworkPage implements OnInit, OnDestroy {\r\n  networkistener: PluginListenerHandle;\r\n  // status: ConnectionStatus;\r\n  status: string;\r\n\r\n  constructor(private NgZone: NgZone) {}\r\n\r\n  async ngOnInit() {\r\n    this.networkistener = await Network.addListener(\r\n      'networkStatusChange',\r\n      (status) => {\r\n        console.log('Network status changed', status);\r\n        this.NgZone.run(() => {\r\n          this.changeStatus(status);\r\n        });\r\n      }\r\n    );\r\n\r\n    const status = await Network.getStatus();\r\n    this.changeStatus(status);\r\n    console.log('Network status:', this.status);\r\n  }\r\n\r\n  async changeStatus(status) {\r\n    // this.status = status;\r\n    this.status = status.connected ? 'Online' : 'Offline';\r\n    await Toast.show({\r\n      text: this.status,\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.networkistener) this.networkistener.remove();\r\n  }\r\n}\r\n","export {};\n","import { registerPlugin } from '@capacitor/core';\nconst Network = registerPlugin('Network', {\n    web: () => import('./web').then(m => new m.NetworkWeb()),\n});\nexport * from './definitions';\nexport { Network };\n","export {};\n","import { registerPlugin } from '@capacitor/core';\nconst Toast = registerPlugin('Toast', {\n    web: () => import('./web').then(m => new m.ToastWeb()),\n});\nexport * from './definitions';\nexport { Toast };\n"],"names":["registerPlugin","Network","web","then","m","NetworkWeb","Toast","ToastWeb"],"sourceRoot":"webpack:///","x_google_ignoreList":[3,4,5,6]}